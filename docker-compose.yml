version: '3.8'

services:

  # dagster-daemon:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   env_file: ./.env
  #   entrypoint: 
  #   - dagster-daemon
  #   - run
  #   restart: on-failure
  #   networks:
  #     - dagster_network

  dagster-dbt:
      build:
        context: .
        dockerfile: ./Dockerfile
      env_file: ./.env
      ports:
          - "3000:3000"
      entrypoint:
        - dagster-webserver
        - -h
        - "0.0.0.0"
        - -p 
        - "3000"
        - -w
        - workspace.yaml
      restart: always
      depends_on:
      - dagster-daemon
      networks:
      - dagster_network
  
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${PG_USERNAME}  
      POSTGRES_PASSWORD: ${PG_PASSWORD}  
      POSTGRES_DB: ${PG_DBNAME}  
    ports:
      - "${PG_PORT}:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${PG_DBNAME}",
          "-U",
          "${PG_USERNAME}"
        ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - dagster_network

  metabase:
    image: ${METABASE_IMAGE}:latest
    container_name: metabase
    ports:
      - "4000:3000"  # Map port 4000 on the host to port 3000 in the container
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - ./metabase-data:/metabase-data  # Persist Metabase data
    networks:
      - dagster_network

volumes:
  postgres_data:
    driver: local
  metabase_data:

networks:
  dagster_network:
    driver: bridge
